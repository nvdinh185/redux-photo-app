{"version":3,"sources":["api/userApi.js","app/userSlice.js","app/store.js","api/axiosClient.js","api/productApi.js","features/Auth/pages/SignIn/index.jsx","components/Header/index.jsx","App.js","serviceWorker.js","index.js","features/Photo/photoSlice.js","components/NotFound/index.jsx"],"names":["userApi","getMe","Promise","resolve","reject","setTimeout","currentUser","firebase","auth","id","uid","name","displayName","email","photoUrl","photoURL","require","createSlice","createAsyncThunk","params","thunkAPI","a","userReducer","initialState","current","reducers","extraReducers","fulfilled","state","action","payload","reducer","rootReducer","photos","photoReducer","user","store","configureStore","getFirebaseToken","getIdToken","localStorage","getItem","waitTimer","console","log","unregisterAuthObserver","onAuthStateChanged","token","clearTimeout","axiosClient","axios","create","baseURL","process","headers","paramsSerializer","queryString","stringify","interceptors","request","use","config","Authorization","response","data","error","productApi","getAll","get","url","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","SignIn","className","firebaseAuth","Header","Container","Row","Col","xs","href","target","rel","exact","to","activeClassName","Photo","React","lazy","initializeApp","apiKey","authDomain","App","useState","setProductList","dispatch","useDispatch","useEffect","_page","_limit","fetchProductList","actionResult","unwrapResult","message","handleButtonClick","onClick","signOut","then","fallback","Button","from","path","component","NotFound","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","photo","categoryId","title","addPhoto","push","removePhoto","removePhotoId","filter","updatePhoto","newPhoto","photoIndex","findIndex","actions"],"mappings":"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","file":"static/js/main.26ac84ac.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst userApi = {\r\n  getMe: () => {\r\n    // TODO: Call API to get current user\r\n    return new Promise((resolve, reject) => {\r\n      // reject(new Error('MY CUSTOM ERROR'));\r\n      // return;\r\n\r\n      // Wait 500ms --> return result\r\n      setTimeout(() => {\r\n        const currentUser = firebase.auth().currentUser;\r\n\r\n        resolve({\r\n          id: currentUser.uid,\r\n          name: currentUser.displayName,\r\n          email: currentUser.email,\r\n          photoUrl: currentUser.photoURL,\r\n        })\r\n      }, 500);\r\n    })\r\n  }\r\n}\r\n\r\nexport default userApi;","import userApi from \"api/userApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const getMe = createAsyncThunk('user/getMe', async (params, thunkAPI) => {\r\n  // thunkAPI.dispatch(...)\r\n  const currentUser = await userApi.getMe();\r\n  return currentUser;\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    current: {},\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getMe.fulfilled]: (state, action) => {\r\n      state.current = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nconst { reducer: userReducer } = userSlice;\r\nexport default userReducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport photoReducer from 'features/Photo/photoSlice';\r\nimport userReducer from \"./userSlice\";\r\n\r\nconst rootReducer = {\r\n  photos: photoReducer,\r\n  user: userReducer,\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;","import axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport firebase from 'firebase';\r\n\r\nconst getFirebaseToken = async () => {\r\n  const currentUser = firebase.auth().currentUser;\r\n  if (currentUser) return currentUser.getIdToken();\r\n\r\n  // Not logged in\r\n  const hasRememberedAccount = localStorage.getItem('firebaseui::rememberedAccounts');\r\n  if (!hasRememberedAccount) return null;\r\n\r\n  // Logged in but current user is not fetched --> wait (10s)\r\n  return new Promise((resolve, reject) => {\r\n    const waitTimer = setTimeout(() => {\r\n      reject(null);\r\n      console.log('Reject timeout');\r\n    }, 10000);\r\n\r\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (!user) {\r\n        reject(null);\r\n      }\r\n\r\n      if (user) {\r\n        const token = await user.getIdToken();\r\n        console.log('[AXIOS] Logged in user token: ', token);\r\n        resolve(token);\r\n      } else {\r\n        console.log('Not Login!');\r\n        resolve();\r\n      }\r\n\r\n\r\n      unregisterAuthObserver();\r\n      clearTimeout(waitTimer);\r\n    });\r\n  });\r\n}\r\n\r\n// Set up default config for http requests here\r\n// Please have a look at here `https://github.com/axios/axios#request- config` for the full list of configs\r\nconst axiosClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    'content-type': 'application/json',\r\n  },\r\n  paramsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  const token = await getFirebaseToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n  if (response && response.data) {\r\n    return response.data;\r\n  }\r\n\r\n  return response;\r\n}, (error) => {\r\n  // Handle errors\r\n  throw error;\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nconst productApi = {\r\n  getAll: (params) => {\r\n    const url = '/products';//'https://js-post-api.herokuapp.com/api/products';\r\n    return axiosClient.get(url, { params });\r\n  },\r\n\r\n  get: (id) => {\r\n    const url = `/products/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n}\r\n\r\nexport default productApi;","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n\r\nSignIn.propTypes = {\r\n\r\n};\r\n\r\nconst uiConfig = {\r\n  signInFlow: 'redirect',\r\n  signInSuccessUrl: '/photos',\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n  ],\r\n};\r\n\r\nfunction SignIn() {\r\n  return (\r\n    <div>\r\n      <div className=\"text-center\">\r\n        <h2>Login Form</h2>\r\n\r\n        <p>or login with social accounts</p>\r\n      </div>\r\n\r\n      <StyledFirebaseAuth\r\n        uiConfig={uiConfig}\r\n        firebaseAuth={firebase.auth()}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport './Header.scss';\r\n\r\nHeader.propTypes = {};\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <Container>\r\n        <Row className=\"justify-content-between\">\r\n          <Col xs=\"auto\">\r\n            <a\r\n              className=\"header__link header__title\"\r\n              href=\"https://youtube.com/easyfrontend\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Easy Frontend\r\n            </a>\r\n          </Col>\r\n\r\n          <Col xs=\"auto\">\r\n            <NavLink\r\n              exact\r\n              className=\"header__link\"\r\n              to=\"/sign-in\"\r\n              activeClassName=\"header__link--active\"\r\n            >\r\n              Sign In\r\n            </NavLink>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import { unwrapResult } from '@reduxjs/toolkit';\r\nimport productApi from 'api/productApi';\r\nimport { getMe } from 'app/userSlice';\r\nimport SignIn from 'features/Auth/pages/SignIn';\r\nimport firebase from 'firebase';\r\nimport React, { Suspense, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport './App.scss';\r\nimport Header from './components/Header';\r\nimport NotFound from './components/NotFound';\r\n\r\n// Lazy load - Code splitting\r\nconst Photo = React.lazy(() => import('./features/Photo'));\r\n\r\n// Configure Firebase.\r\nconst config = {\r\n  // apiKey: \"AIzaSyB3FtOQKw_OKjif72Qla2IsG9nek1O71PI\",\r\n  // authDomain: \"redux-photo-app-ea6ce.firebaseapp.com\",\r\n  apiKey: process.env.REACT_APP_FIREBASE_API,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  // apiKey: \"AIzaSyDOCAbC123dEf456GhI789jKl01-MnO\",\r\n  // authDomain: \"myapp-project-123.firebaseapp.com\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nfunction App() {\r\n  const [productList, setProductList] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchProductList = async () => {\r\n      try {\r\n        const params = {\r\n          _page: 1,\r\n          _limit: 10,\r\n\r\n        };\r\n        console.log(123);\r\n        const response = await productApi.getAll(params);\r\n        console.log(response);\r\n        setProductList(response.data);\r\n      } catch (error) {\r\n        console.log('Failed to fetch product list: ', error);\r\n      }\r\n    }\r\n\r\n    fetchProductList();\r\n  }, []);\r\n\r\n  // Handle firebase auth changed\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (!user) {\r\n        // user logs out, handle something here\r\n        console.log('User is not logged in');\r\n        return;\r\n      }\r\n\r\n      // Get me when signed in\r\n      // const action = getMe();\r\n      try {\r\n        const actionResult = await dispatch(getMe());\r\n        const currentUser = unwrapResult(actionResult);\r\n        console.log('Logged in user: ', currentUser);\r\n      } catch (error) {\r\n        console.log('Failed to login ', error.message);\r\n        // show toast error\r\n      }\r\n\r\n    });\r\n\r\n    return () => unregisterAuthObserver();\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    firebase.auth().signOut().then((data) => {\r\n      // Sign-out successful.\r\n      console.log(\"Sign-out successful\", data);\r\n    }, function (error) {\r\n      // An error happened.\r\n      console.log(\"An error happened\");\r\n    });\r\n  };\r\n\r\n  const handleButtonClick = async () => {\r\n    try {\r\n      const params = {\r\n        _page: 1,\r\n        _limit: 10,\r\n\r\n      };\r\n      const response = await productApi.getAll(params);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log('Failed to fetch product list: ', error);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"photo-app\">\r\n      <button onClick={handleLogout}>Logout</button>\r\n      <Suspense fallback={<div>Loading ...</div>}>\r\n        <BrowserRouter>\r\n          <Header />\r\n\r\n          <Button onClick={handleButtonClick}>Fetch Product List</Button>\r\n\r\n          <Switch>\r\n            <Redirect exact from=\"/\" to=\"/photos\" />\r\n\r\n            <Route path=\"/photos\" component={Photo} />\r\n            <Route path=\"/sign-in\" component={SignIn} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'app/store';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialPhotos = [\r\n  {\r\n    id: 91176,\r\n    categoryId: 5,\r\n    photo: 'https://picsum.photos/id/532/300/300',\r\n    title: 'Enim laboris dolore consectetur et fugiat do amet eiusmod anim proident do culpa irure consectetur.'\r\n  },\r\n  {\r\n    id: 82605,\r\n    categoryId: 1,\r\n    photo: 'https://picsum.photos/id/43/300/300',\r\n    title: 'Ad officia magna veniam sunt.'\r\n  },\r\n  {\r\n    id: 74760,\r\n    categoryId: 3,\r\n    photo: 'https://picsum.photos/id/722/300/300',\r\n    title: 'Minim anim in sunt esse nisi sit magna consequat in sit laboris adipisicing.'\r\n  },\r\n  {\r\n    id: 39588,\r\n    categoryId: 5,\r\n    photo: 'https://picsum.photos/id/294/300/300',\r\n    title: 'Deserunt in tempor est id consectetur cupidatat.'\r\n  },\r\n  {\r\n    id: 72133,\r\n    categoryId: 4,\r\n    photo: 'https://picsum.photos/id/229/300/300',\r\n    title: 'Labore culpa velit sunt sit anim ad do veniam do proident sunt et nisi mollit.'\r\n  },\r\n  {\r\n    id: 95333,\r\n    categoryId: 1,\r\n    photo: 'https://picsum.photos/id/862/300/300',\r\n    title: 'Fugiat fugiat voluptate tempor minim ipsum nisi culpa magna officia ea deserunt tempor.'\r\n  },\r\n  {\r\n    id: 62419,\r\n    categoryId: 3,\r\n    photo: 'https://picsum.photos/id/515/300/300',\r\n    title: 'Excepteur nisi aliquip ex aliqua consectetur id laboris cillum elit dolor dolor anim sint.'\r\n  },\r\n  {\r\n    id: 12569,\r\n    categoryId: 5,\r\n    photo: 'https://picsum.photos/id/730/300/300',\r\n    title: 'Occaecat exercitation Lorem cupidatat adipisicing elit duis consequat esse et tempor eu enim cupidatat.'\r\n  },\r\n  {\r\n    id: 47434,\r\n    categoryId: 3,\r\n    photo: 'https://picsum.photos/id/287/300/300',\r\n    title: 'Veniam officia est nulla proident labore.'\r\n  },\r\n  {\r\n    id: 52685,\r\n    categoryId: 3,\r\n    photo: 'https://picsum.photos/id/859/300/300',\r\n    title: 'Ut incididunt do magna culpa consectetur id deserunt et enim elit quis.'\r\n  },\r\n  {\r\n    id: 69928,\r\n    categoryId: 5,\r\n    photo: 'https://picsum.photos/id/110/300/300',\r\n    title: 'Nisi velit fugiat voluptate fugiat magna officia qui fugiat ad non.'\r\n  },\r\n  {\r\n    id: 86160,\r\n    categoryId: 5,\r\n    photo: 'https://picsum.photos/id/649/300/300',\r\n    title: 'Id ex enim non dolore reprehenderit eu ullamco.'\r\n  },\r\n];\r\n\r\nconst photo = createSlice({\r\n  name: 'photos',\r\n  initialState: initialPhotos,\r\n  reducers: {\r\n    addPhoto: (state, action) => {\r\n      // const newPhoto = action.payload;\r\n      state.push(action.payload);\r\n    },\r\n    removePhoto: (state, action) => {\r\n      console.log(action.payload);\r\n      const removePhotoId = action.payload;\r\n      return state.filter(photo => photo.id !== removePhotoId);\r\n    },\r\n    updatePhoto: (state, action) => {\r\n      const newPhoto = action.payload;\r\n      const photoIndex = state.findIndex(photo => photo.id === newPhoto.id);\r\n\r\n      if (photoIndex >= 0) {\r\n        state[photoIndex] = newPhoto;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst { reducer, actions } = photo;\r\nexport const { addPhoto, removePhoto, updatePhoto } = actions;\r\nexport default reducer;","import React from 'react';\r\n\r\nNotFound.propTypes = {};\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      Oopss ... Not found\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;"],"sourceRoot":""}